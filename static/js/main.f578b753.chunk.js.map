{"version":3,"sources":["styles/filter.module.css","styles/form.module.css","components/Form/form.js","components/Filter/filter.js","components/ContactsList/contactsListItem.js","components/ContactsList/contactsList.js","App.js","index.js","styles/contacts.module.css"],"names":["module","exports","Form","state","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","css","form","this","container","label","input","onChange","type","pattern","title","required","button","Component","Filter","filter","text","ContactsListItem","deletFunc","item","onClick","ContactsList","contacts","list","map","contact","id","App","onFormSubmit","data","console","log","addContact","nanoid","verifyContact","alert","prevState","some","filterContacts","editFilter","toLowerCase","includes","deletContact","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f578b753.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"filter_container__1swLX\",\"text\":\"filter_text__2x-5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__YtVBZ\",\"container\":\"form_container__1ZXRz\",\"label\":\"form_label__3DVdK\",\"input\":\"form_input__1tk4J\",\"button\":\"form_button__1XDuY\"};","import { Component } from \"react\";\r\nimport { PropTypes } from 'prop-types';\r\nimport css from '../../styles/form.module.css'\r\n\r\nclass Form extends Component { \r\n    static propTypes = {\r\n        onSubmit: PropTypes.func,\r\n    }\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n   \r\n    handleChange = (event) => {\r\n    const { name, value} = event.target\r\n    this.setState({[name] : value})\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n      this.props.onSubmit(this.state);\r\n      this.reset()\r\n    }\r\n    \r\n    reset = () => { \r\n        this.setState({name:\"\", number:\"\"})\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <form className={css.form } onSubmit={this.handleSubmit }>\r\n                <div className={css.container }>\r\n                    <label className={css.label }>Name\r\n                    <input\r\n                        className={ css.input}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.name}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                            required\r\n                    />\r\n                </label>\r\n                <label className={css.label }>Number\r\n                    <input\r\n                         className={ css.input}\r\n                        onChange={this.handleChange}\r\n                         value={this.state.number}       \r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                </div>\r\n          <button  className={ css.button} type=\"submit\" >Add contact</button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport { Form}","import { PropTypes } from 'prop-types';\r\nimport css from '../../styles/filter.module.css'\r\n\r\nconst Filter = ({ filter, value})=>  {  \r\n        return (\r\n            <div className={css.container }>\r\n                <p className={ css.text}>Find contact by name</p>\r\n                <label>\r\n                <input\r\n                    onChange={filter}\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    value={value}/>\r\n            </label>\r\n            </div>\r\n        )\r\n    \r\n}\r\nFilter.propTypes = {\r\n    filter: PropTypes.func, \r\n    value: PropTypes.string,\r\n}\r\n\r\nexport { Filter}","import PropTypes from 'prop-types';\r\nimport css from '../../styles/contacts.module.css'\r\n\r\nconst ContactsListItem = ({ name, number , deletFunc}) => { \r\n    return (\r\n        <li className={css.item}>\r\n            <p className={css.text}>{name}<span className={css.number}>{number}</span></p>\r\n            <button className={css.button} onClick={deletFunc} type='button'>Delet</button>\r\n        </li>\r\n    )\r\n}\r\nContactsListItem.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    deletFunc: PropTypes.func\r\n}\r\nexport { ContactsListItem}","import { ContactsListItem} from './contactsListItem'\r\nimport PropTypes from 'prop-types'\r\nimport css from '../../styles/contacts.module.css'\r\n\r\n\r\nconst ContactsList = ({ contacts, deletFunc}) => { \r\n    return (\r\n        <ul className={css.list }>\r\n            {contacts.map(contact => <ContactsListItem key={contact.id} name={contact.name} number={contact.number} deletFunc={()=> deletFunc(contact.id)}/>) }\r\n        </ul>\r\n    )\r\n}\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    deletFunc: PropTypes.func\r\n}\r\nexport { ContactsList}","import { Component } from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport { Form } from './components/Form';\nimport { Filter } from './components/Filter';\nimport { ContactsList} from './components/ContactsList'\n\n\nclass App extends Component {\n  state = {\n  contacts: [{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},],\n   filter: \"\",\n  }\n  onFormSubmit = (data) => { \n    console.log('data', data);\n    this.addContact(data)\n    console.log('contacts', this.state.contacts)\n    \n  }\n  handleChange = (event) => {\n    const { name, value} = event.target\n    this.setState({[name] : value})\n  }\n\n  addContact = (data) => {\n    const contact = {\n      id: nanoid(),\n      ...data\n    }  \n    this.verifyContact(data) ? (alert(`${data.name} is already in contacts`)) :\n      (this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts]\n    })) )   \n  }\n  verifyContact = (data) => { \n    const sameName = this.state.contacts.some(contact => contact.name === data.name);\n    return sameName\n  }\n  \n  filterContacts = () => { \n    const editFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact=> contact.name.toLowerCase().includes(editFilter))\n      \n  }\n  deletContact = (id) => { \n    this.setState(prevState => ({contacts: prevState.contacts.filter(contact=> contact.id !== id)}))\n  }\n  \n  render() {\n     const filteredContacts = this.filterContacts()                                                                         \n     \n    return (\n      <div className=\"App\">\n        <h1 className='main-title'>Phonebook</h1>\n        <Form onSubmit={this.onFormSubmit }/>\n        \n        <h2 className='title'>Contacts</h2>\n        \n        <Filter filter={this.handleChange } value={this.state.filter }/>\n        <ContactsList contacts={filteredContacts} deletFunc={this.deletContact }/>\n    </div>\n  );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__29XSG\",\"item\":\"contacts_item__hBoN-\",\"text\":\"contacts_text__gE4Eu\",\"number\":\"contacts_number__1YRWG\",\"button\":\"contacts_button__3Vt3N\"};"],"sourceRoot":""}